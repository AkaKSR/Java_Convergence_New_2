-- ================================ --
-- 날짜처리함수
-- ================================ --
SELECT SYSDATE + BIRTH_DATE FROM temp; -- 에러. 날짜끼리 덧셈은 불가
SELECT SYSDATE - BIRTH_DATE FROM temp; -- 날짜끼리 뺄샘은 가능 : 사이의 일 수
-- 나는 몇일을 살았는가?
SELECT SYSDATE - TO_DATE('19930625','yyyymmdd') FROM dual;
-- 우리 수업은 몇일이나 남았는가?
SELECT SYSDATE - TO_DATE('20200121','yyyymmdd') FROM dual;

-- 날짜와 숫자의 연산 : 일수 증감
SELECT EMP_NAME, BIRTH_DATE-1, BIRTH_DATE, BIRTH_DATE+1 FROM temp;

-- 시간 계산
SELECT
	TO_CHAR(BIRTH_DATE, 'HH24:MI:SS'),
	TO_CHAR(BIRTH_DATE+1/24, 'HH24:MI:SS') "1시간후",
	TO_CHAR(BIRTH_DATE+30/24/60, 'HH24:MI:SS') "30분후",
	TO_CHAR(BIRTH_DATE+30/24/60/60, 'HH24:MI:SS') "30초후"
FROM
	TEMP;

-- ADD_MONTHS함수 : 월을 더하거나 뺀다
SELECT
	BIRTH_DATE, ADD_MONTHS(BIRTH_DATE,1), ADD_MONTHS(BIRTH_DATE,-1)
FROM
	TEMP;

-- MONTHS_BETWEEN(날짜1, 날짜2) : 사이의 개월 수
SELECT
	BIRTH_DATE, MONTHS_BETWEEN(SYSDATE, BIRTH_DATE) MONTH_TERM
FROM
	TEMP;

-- SYSDATE에 대하여
-- 2번 컬럼에 1번에서 구한 식을 ADD_MONTHS한다.
-- 3번 컬럼에 1번에서 구한 식을 TRUNC 함수를 적용하여 ADD_MONTHS한다.
-- 4번 컬럼에 1번에서 구한 식을 ROUND 함수를 적용하여 ADD_MONTHS한다.
SELECT
	MONTHS_BETWEEN(BIRTH_DATE, SYSDATE) "1컬럼",
	ADD_MONTHS(SYSDATE,MONTHS_BETWEEN(BIRTH_DATE, SYSDATE)) "2컬럼",
	ADD_MONTHS(SYSDATE,TRUNC(MONTHS_BETWEEN(BIRTH_DATE, SYSDATE))) "3컬럼",
	ADD_MONTHS(SYSDATE,ROUND(MONTHS_BETWEEN(BIRTH_DATE, SYSDATE))) "4컬럼"
FROM
	TEMP;
	
-- last_day 함수
SELECT
	BIRTH_DATE, LAST_DAY(BIRTH_DATE)
FROM
	TEMP;

-- current_date 함수
SELECT
	SYSDATE, CURRENT_DATE, SYSTIMESTAMP, CURRENT_TIMESTAMP
FROM
	dual;

-- trunc(date)
SELECT
	BIRTH_DATE,
	TRUNC(BIRTH_DATE, 'YEAR') Y, -- 년도
	TRUNC(BIRTH_DATE, 'Q') Q, -- 분기
	TRUNC(BIRTH_DATE, 'MONTH') M, -- 월
	TRUNC(BIRTH_DATE, 'DDD') D, -- 일
	TRUNC(BIRTH_DATE, 'DAY') W -- 요일
FROM
	TEMP;
	
-- EXTRACT 함수
SELECT
	BIRTH_DATE,
	EXTRACT(YEAR FROM BIRTH_DATE),
	EXTRACT(MONTH FROM BIRTH_DATE),
	EXTRACT(DAY FROM BIRTH_DATE)
FROM
	TEMP;

-- ROUND 함수
SELECT
	BIRTH_DATE,
	ROUND(BIRTH_DATE, 'YEAR') Y, -- 년도
	ROUND(BIRTH_DATE, 'Q') Q, -- 분기
	ROUND(BIRTH_DATE, 'MONTH') M, -- 월
	ROUND(BIRTH_DATE, 'DDD') D, -- 일
	ROUND(BIRTH_DATE, 'DAY') W -- 요일
FROM
	TEMP;
	
-- ================================ --
-- 변환 함수
-- ================================ --
-- 날짜를 문자로
SELECT
	BIRTH_DATE,
	TO_CHAR(BIRTH_DATE, 'YYYY MM DD'),
	TO_CHAR(BIRTH_DATE, 'YYYY"년" MM"월" DD"일"') -- 변환 문자 이외는 ""로 감싸줘야 한다.
FROM
	TEMP;

-- 숫자를 문자로
SELECT
	EMP_NAME,
	SALARY,
	SALARY/13,
	TO_CHAR(SALARY/13,'999,999,999.99'),
	TO_CHAR(SALARY/13,'999,999,999.00'),
	TO_CHAR(SALARY/13,'L999,999,999.99'),
	TO_CHAR(-1234,'999,999,999.00MI')
--	TO_CHAR(-1234,'999,999,999EEEE')
FROM
	TEMP;

-- TO_NUMBER : 문자를 수자로
SELECT
	TO_NUMBER('1234'),
	TO_NUMBER('1,234', '9,999'),
	TO_NUMBER('1,234.90', '9,999.99'),
--	TO_NUMBER('2002년', '9999"년"')
FROM
	dual;
	
-- "2002년"에서 년도만 뽑아 5를 더하여 출력하시오
SELECT
	SUBSTR('2002년',1,4) || 5,
	SUBSTR('2002년',1,4) + 5,
	TO_NUMBER(SUBSTR('2002년',1,4) + 5)
FROM
	DUAL;

-- TEMP에서 직급별 최소 연봉을 가진 직원의 사번과 연봉을 가져와라(서브쿼리 사용없이)
SELECT
	SUBSTR(MIN(LPAD(TO_CHAR(SALARY),10,'0') || EMP_ID),11) 사번,
	MIN(SALARY) 최소연봉
FROM
	TEMP
GROUP BY
	LEV;
	
-- AVG의 함정
SELECT
	LEV,
	SUM(SALARY) 연봉합계,
	AVG(SALARY) 연봉평균1,
	SUM(SALARY)/count(*) 연봉평균2
FROM
	TEMP
GROUP BY
	LEV;

UPDATE TEMP SET SALARY=0 WHERE EMP_NAME='홍길동';
SELECT * FROM TEMP;
SELECT
	LEV,
	SUM(SALARY) 연봉합계,
	AVG(SALARY) 연봉평균1,
	SUM(SALARY)/count(*) 연봉평균2
FROM
	TEMP
GROUP BY
	LEV;
	
UPDATE TEMP SET SALARY=NULL WHERE EMP_NAME='홍길동';
SELECT
	LEV,
	SUM(SALARY) 연봉합계,
	AVG(SALARY) 연봉평균1,
	SUM(SALARY)/count(*) 연봉평균2
FROM
	TEMP
GROUP BY
	LEV;

SELECT
	SALARY
FROM
	TEMP
WHERE
	LEV='과장';

-- ================================ --
-- 집합 연산자
-- ================================ --
-- 데이터 넣기
INSERT INTO TEMP VALUES (20000101,'이태백',TO_DATE('19800125','YYYYMMDD'),'AA0001','인턴','Y','123-4567','등산', 30000000,'수습');
INSERT INTO TEMP VALUES (20000102,'김설악',TO_DATE('19800322','YYYYMMDD'),'AB0001','인턴','Y','234-5678','낚시', 30000000,'수습');
INSERT INTO TEMP VALUES (20000203,'최오대',TO_DATE('19800415','YYYYMMDD'),'AC0001','인턴','Y','345-6789','바둑', 30000000,'수습');
INSERT INTO TEMP VALUES (20000334,'박지리',TO_DATE('19800525','YYYYMMDD'),'BA0001','인턴','Y','456-7890','노래', 30000000,'수습');
INSERT INTO TEMP VALUES (20000305,'정북악',TO_DATE('19800615','YYYYMMDD'),'BB0001','인턴','Y','567-8901','독서', 30000000,'수습');
INSERT INTO TEMP VALUES (20006106,'유도봉',TO_DATE('19800705','YYYYMMDD'),'BC0001','인턴','Y','678-9012','술',   30000000,'수습');
INSERT INTO TEMP VALUES (20000407,'윤주왕',TO_DATE('19800815','YYYYMMDD'),'CA0001','인턴','Y','789-0123','오락', 30000000,'수습');
INSERT INTO TEMP VALUES (20000308,'강월악',TO_DATE('19800925','YYYYMMDD'),'CB0001','인턴','Y','890-1234','골프', 30000000,'수습');
INSERT INTO TEMP VALUES (20000119,'장금강',TO_DATE('19801105','YYYYMMDD'),'CC0001','인턴','Y','901-2345','술',   30000000,'수습');
INSERT INTO TEMP VALUES (20000210,'나한라',TO_DATE('19801215','YYYYMMDD'),'CD0001','인턴','Y','012-3456','독서', 30000000,'수습');
COMMIT;

-- 테이블 생성
CREATE TABLE TCOM (
        WORK_YEAR    VARCHAR2(04) NOT NULL,
        EMP_ID       NUMBER       NOT NULL,
        BONUS_RATE   NUMBER,
        COMM         NUMBER,
        CONSTRAINT COM_PK PRIMARY KEY (WORK_YEAR,EMP_ID)
                  );

-- SELECT 결과를 이용한 INSERT
INSERT INTO TCOM 
SELECT  '2001'  ,EMP_ID, 1,SALARY*0.01
FROM   TEMP
WHERE  DEPT_CODE LIKE 'C%';

-- 테이블 생성
CREATE TABLE EMP_LEVEL
  (LEV VARCHAR2(10) PRIMARY KEY,
   FROM_SAL NUMBER,
  TO_SAL NUMBER,
  FROM_AGE NUMBER,
  TO_AGE NUMBER
 );

-- 데이터 넣기
INSERT INTO EMP_LEVEL VALUES ('사원',30000000,40000000,20,25);
INSERT INTO EMP_LEVEL VALUES ('대리',35000000,60000000,23,27);
INSERT INTO EMP_LEVEL VALUES ('과장',37000000,75000000,25,29);
INSERT INTO EMP_LEVEL VALUES ('차장',40000000,80000000,27,31);
INSERT INTO EMP_LEVEL VALUES ('부장',60000000,100000000,29,32);
COMMIT;

-- 데이터 확인
SELECT * FROM EMP_LEVEL;

-- UNION 집합 함수 : 중복 제거
-- TEMP와 TCOM을 이용한 union
SELECT
	COUNT(*)
FROM
	TEMP; -- 20개

SELECT
	COUNT(*)
FROM
	TCOM; -- 8개

SELECT EMP_ID FROM TEMP
UNION
SELECT EMP_ID FROM TCOM; -- 20개

-- UNION ALL을 이용한 합집합 : 중복 허용
SELECT EMP_ID FROM TEMP
UNION ALL
SELECT EMP_ID FROM TCOM; -- 28개

-- UNION 사용시 주의 할 점
-- 1. 두 문장간의 자료 유형이 일치해야 한다.
SELECT EMP_ID, EMP_NAME FROM TEMP
UNION
SELECT EMP_ID, BONUS_RATE FROM TCOM; -- 에러 : ORA-01790: expression must have same datatype as corresponding expression

-- 2. 컬럼의 개수가 일치해야 한다.
SELECT EMP_ID, EMP_NAME FROM TEMP
UNION
SELECT EMP_ID FROM TCOM; -- 에러 : ORA-01789: query block has incorrect number of result columns

UPDATE TEMP SET SALARY=72000000 WHERE EMP_NAME='홍길동';

-- 문제 : UNION을 이용하여 TEMP와 TCOM의 자료 중 EMP_ID, SALARY, COMM을 보여주는 쿼리 작성
-- 이때 SALARY, COMM이 모두 존재하는 사번은 두 줄로 나와야 한다.
-- TEMP에는 COMM이 없고 TCOM에는 SALARY가 없다.
SELECT EMP_ID, SALARY, 0 COMM FROM TEMP
UNION
SELECT EMP_ID, 0 SALARY, COMM	FROM TCOM;

SELECT EMP_ID, SALARY, 0 COMM FROM TEMP
UNION ALL
SELECT EMP_ID, 0 SALARY, COMM	FROM TCOM
ORDER BY 1;

-- 교집합 : INTERSECT
SELECT EMP_ID FROM TEMP
INTERSECT
SELECT EMP_ID FROM TCOM; -- 커미션을 받는 직원

-- 차집합 : MINUS
SELECT EMP_ID FROM TEMP
MINUS
SELECT EMP_ID FROM TCOM; -- 커미션을 받지 않는 직원

-- TEMP와 TCOM의 교집합과 차집합을 구하고 그것의 합집합을 구하라
(SELECT EMP_ID FROM TEMP
INTERSECT
SELECT EMP_ID FROM TCOM)
UNION
(SELECT EMP_ID FROM TEMP
MINUS
SELECT EMP_ID FROM TCOM);